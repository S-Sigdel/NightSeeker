// jobsMiddleware.ts

import { configureProviders } from './api'; // Helper to set up providers
import { JobsApi } from './generated/JobsApi'; // Generated by Compact compiler
import { WalletApi } from '@midnight-ntwrk/wallet'; // Wallet connector

export async function initJobsMiddleware(wallet: WalletApi, config: any) {
  const providers = await configureProviders(wallet, config);
  const jobs = new JobsApi(providers);

  // Create a new job by submitting a commitment
  async function createJob(commitment: Uint8Array) {
    // commitment: Bytes<32> generated off-chain (persistentHash of job data)
    return jobs.create_job(commitment);
  }

  // Prove knowledge of the job data (ZK proof handled by proof server)
  async function proveJob(id: bigint) {
    // id: Uint<64> (job ID)
    return jobs.prove_job(id);
  }

  return {
    createJob,
    proveJob,
  };
}
