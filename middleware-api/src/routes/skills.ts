// skillsMiddleware.ts

import { configureProviders } from './api'; // Helper to set up providers
import { SkillsApi } from './generated/SkillsApi'; // Generated by Compact compiler
import { WalletApi } from '@midnight-ntwrk/wallet'; // Wallet connector

export async function initSkillsMiddleware(wallet: WalletApi, config: any) {
  const providers = await configureProviders(wallet, config);
  const skills = new SkillsApi(providers);

  // Add or update a user's skill commitment
  async function addSkill(commitment: Uint8Array) {
    // commitment: Bytes<32> generated off-chain (persistentHash of skills data)
    return skills.add_skill(commitment);
  }

  // Prove knowledge of the skills data (ZK proof handled by proof server)
  async function proveSkill() {
    return skills.prove_skill();
  }

  return {
    addSkill,
    proveSkill,
  };
}
