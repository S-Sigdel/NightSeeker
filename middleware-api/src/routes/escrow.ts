// escrow.ts middleware

import { configureProviders } from './api'; // Helper to set up providers (proof server, indexer, etc.)
import { EscrowApi } from './generated/EscrowApi'; // Generated by Compact compiler
import { WalletApi } from '@midnight-ntwrk/wallet'; // Wallet connector

// Initialize the contract API with providers and wallet
export async function initEscrowMiddleware(wallet: WalletApi, config: any) {
  const providers = await configureProviders(wallet, config);
  const escrow = new EscrowApi(providers);

  // Fund the escrow (store a new commitment)
  async function fundEscrow(commitment: Uint8Array) {
    // commitment: Bytes<32> generated off-chain
    return escrow.fundEscrow(commitment);
  }

  // Release payment (requires ZK proof and nullifier)
  async function releasePayment() {
    // The ZK proof and nullifier are handled by the generated API and proof server
    return escrow.releasePayment();
  }

  return {
    fundEscrow,
    releasePayment,
  };
}

